{"ast":null,"code":"import { apiService } from \"@/common/api.service.js\";\nexport default {\n  name: \"HomeView\",\n\n  data() {\n    return {\n      questions: [],\n      next: null,\n      loadingQuestions: false\n    };\n  },\n\n  methods: {\n    getQuestions() {\n      // make a GET Request to the questions list endpoint and populate the questions array\n      let endpoint = \"/api/questions/\";\n\n      if (this.next) {\n        endpoint = this.next;\n      }\n\n      this.loadingQuestions = true;\n      apiService(endpoint).then(data => {\n        this.questions.push(...data.results);\n        this.loadingQuestions = false;\n\n        if (data.next) {\n          this.next = data.next;\n        } else {\n          this.next = null;\n        }\n      });\n    }\n\n  },\n\n  created() {\n    this.getQuestions();\n    document.title = \"QuestionTime\";\n  }\n\n};","map":{"version":3,"mappings":"AASA;AACA;EACAA,gBADA;;EAEAC;IACA;MACAC,aADA;MAEAC,UAFA;MAGAC;IAHA;EAKA,CARA;;EASAC;IACAC;MACA;MACA;;MACA;QACAC;MACA;;MACA;MACAC,qBACAC,IADA,CACAR;QACA;QACA;;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA,CATA;IAUA;;EAlBA,CATA;;EA6BAS;IACA;IACAC;EACA;;AAhCA","names":["name","data","questions","next","loadingQuestions","methods","getQuestions","endpoint","apiService","then","created","document"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\" />\n    <HelloWorld msg=\"Welcome to Your Vue.js App\" />\n  </div>\n</template>\n\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nexport default {\n  name: \"HomeView\",\n  data() {\n    return {\n      questions: [],\n      next: null,\n      loadingQuestions: false\n    }\n  },\n  methods: {\n    getQuestions() {\n      // make a GET Request to the questions list endpoint and populate the questions array\n      let endpoint = \"/api/questions/\";\n      if (this.next) {\n        endpoint = this.next;\n      }\n      this.loadingQuestions = true;\n      apiService(endpoint)\n        .then(data => {\n          this.questions.push(...data.results)\n          this.loadingQuestions = false;\n          if (data.next) {\n            this.next = data.next;\n          } else {\n            this.next = null;\n          }\n        })\n    }\n  },\n  created() {\n    this.getQuestions()\n    document.title = \"QuestionTime\";\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module"}