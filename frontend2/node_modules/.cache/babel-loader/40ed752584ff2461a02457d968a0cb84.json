{"ast":null,"code":"import { apiService } from \"@/common/api.service.js\";\nexport default {\n  name: \"AnswerEditor\",\n  props: {\n    id: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      questionSlug: null,\n      answerBody: null,\n      error: null\n    };\n  },\n\n  methods: {\n    onSubmit() {\n      if (this.answerBody) {\n        let endpoint = `/api/answers/${this.id}/`;\n        apiService(endpoint, \"PUT\", {\n          body: this.answerBody\n        }).then(() => {\n          this.$router.push({\n            name: \"question\",\n            params: {\n              slug: this.questionSlug\n            }\n          });\n        });\n      } else {\n        this.error = \"You can't submit an empty answer!\";\n      }\n    }\n\n  },\n\n  async beforeRouteEnter(to, from, next) {\n    // get the answer's data from the REST API and set two data properties for the component\n    let endpoint = `/api/answers/${to.params.id}/`;\n    let data = await apiService(endpoint);\n    return next(vm => (vm.answerBody = data.body, vm.questionSlug = data.question_slug));\n  }\n\n};","map":{"version":3,"mappings":"AAaA;AACA;EACAA,oBADA;EAEAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CAFA;;EAQAC;IACA;MACAC,kBADA;MAEAC,gBAFA;MAGAC;IAHA;EAKA,CAdA;;EAeAC;IACAC;MACA;QACA;QACAC;UAAAC;QAAA;UACA;YACAZ,gBADA;YAEAa;cAAAC;YAAA;UAFA;QAIA,CALA;MAMA,CARA,MAQA;QACA;MACA;IACA;;EAbA,CAfA;;EA8BA;IACA;IACA;IACA;IACA,YACAC,OACAA,+DADA,CADA;EAKA;;AAvCA","names":["name","props","id","type","required","data","questionSlug","answerBody","error","methods","onSubmit","apiService","body","params","slug","vm"],"sourceRoot":"src/views","sources":["AnswerEditor.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h1 style=\"font-weight: 800\" class=\"mb-3\">Edit</h1>\n    <form @submit.prevent=\"onSubmit\">\n      <textarea v-model=\"answerBody\" class=\"form-control\" rows=\"3\"></textarea>\n      <br />\n      <button type=\"submit\" class=\"btn btn-dark\">Update</button>\n    </form>\n    <p v-if=\"error\" class=\"muted mt-2\">{{ error }}</p>\n  </div>\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nexport default {\n  name: \"AnswerEditor\",\n  props: {\n    id: {\n      type: Number,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      questionSlug: null,\n      answerBody: null,\n      error: null,\n    };\n  },\n  methods: {\n    onSubmit() {\n      if (this.answerBody) {\n        let endpoint = `/api/answers/${this.id}/`;\n        apiService(endpoint, \"PUT\", { body: this.answerBody }).then(() => {\n          this.$router.push({\n            name: \"question\",\n            params: { slug: this.questionSlug },\n          });\n        });\n      } else {\n        this.error = \"You can't submit an empty answer!\";\n      }\n    },\n  },\n  async beforeRouteEnter(to, from, next) {\n    // get the answer's data from the REST API and set two data properties for the component\n    let endpoint = `/api/answers/${to.params.id}/`;\n    let data = await apiService(endpoint);\n    return next(\n      (vm) => (\n        (vm.answerBody = data.body), (vm.questionSlug = data.question_slug)\n      )\n    );\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}