{"ast":null,"code":"import { apiService } from \"@/common/api.service.js\";\nexport default {\n  name: \"AnswerEditor\",\n  props: {\n    id: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      questionSlug: null,\n      answerBody: null,\n      error: null\n    };\n  },\n\n  methods: {\n    onSubmit() {\n      if (this.answerBody) {\n        let endpoint = `/api/answers/${this.id}/`;\n        apiService(endpoint, \"PUT\", {\n          body: this.answerBody\n        }).then(() => {\n          this.$router.push({\n            name: \"question\",\n            params: {\n              slug: this.questionSlug\n            }\n          });\n        });\n      } else {\n        this.error = \"You can't submit an empty answer!\";\n      }\n    }\n\n  },\n\n  async beforeRouteEnter(to, from, next) {\n    // get the answer's data from the REST API and set two data properties for the component\n    let endpoint = `/api/answers/${to.params.id}/`;\n    let data = await apiService(endpoint);\n    return next(vm => (vm.answerBody = data.body, vm.questionSlug = data.question_slug));\n  }\n\n};","map":{"version":3,"mappings":"AAqBA;AACA;EACAA,oBADA;EAEAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CAFA;;EAQAC;IACA;MACAC,kBADA;MAEAC,gBAFA;MAGAC;IAHA;EAKA,CAdA;;EAeAC;IACAC;MACA;QACA;QACAC;UAAAC;QAAA,GACAC,IADA,CACA;UACA;YACAb,gBADA;YAEAc;cAAAC;YAAA;UAFA;QAIA,CANA;MAOA,CATA,MASA;QACA;MACA;IACA;;EAdA,CAfA;;EA+BA;IACA;IACA;IACA;IACA,mBACAC,2BACAA,oCAFA;EAIA;;AAvCA","names":["name","props","id","type","required","data","questionSlug","answerBody","error","methods","onSubmit","apiService","body","then","params","slug","vm"],"sourceRoot":"src/views","sources":["AnswerEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-2\">\r\n    <h1 class=\"mb-3\">Edit Your Answer</h1>\r\n    <form @submit.prevent=\"onSubmit\">\r\n      <textarea \r\n        v-model=\"answerBody\" \r\n        class=\"form-control\" \r\n        rows=\"3\"\r\n      ></textarea>\r\n      <br>\r\n      <button \r\n        type=\"submit\" \r\n        class=\"btn btn-success\"\r\n        >Publish your answer\r\n      </button>\r\n    </form>\r\n    <p v-if=\"error\" class=\"muted mt-2\">{{ error }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\nexport default {\r\n  name: \"AnswerEditor\",\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      questionSlug: null,\r\n      answerBody: null,\r\n      error: null\r\n    }\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      if (this.answerBody) {\r\n        let endpoint = `/api/answers/${this.id}/`;\r\n        apiService(endpoint, \"PUT\", { body: this.answerBody })\r\n          .then(() => {\r\n            this.$router.push({\r\n              name: \"question\",\r\n              params: { slug: this.questionSlug }\r\n            })\r\n          })\r\n      } else {\r\n        this.error = \"You can't submit an empty answer!\";\r\n      }\r\n    }\r\n  },\r\n  async beforeRouteEnter(to, from, next) {\r\n    // get the answer's data from the REST API and set two data properties for the component\r\n    let endpoint = `/api/answers/${to.params.id}/`;\r\n    let data = await apiService(endpoint);\r\n    return next(vm => (\r\n      vm.answerBody = data.body,\r\n      vm.questionSlug = data.question_slug\r\n    ));\r\n  }\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}