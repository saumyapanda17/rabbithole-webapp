{"ast":null,"code":"import { apiService } from \"@/common/api.service.js\";\nexport default {\n  name: \"AnswerComponent\",\n  props: {\n    answer: {\n      type: Object,\n      required: true\n    },\n    requestUser: {\n      type: String,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      userLikedAnswer: this.answer.user_has_voted,\n      likesCounter: this.answer.likes_count\n    };\n  },\n\n  computed: {\n    isAnswerAuthor() {\n      // return true if the logged in user is also the author of the answer instance\n      return this.answer.author === this.requestUser;\n    }\n\n  },\n  methods: {\n    toggleLike() {\n      this.userLikedAnswer === false ? this.likeAnswer() : this.unLikeAnswer();\n    },\n\n    likeAnswer() {\n      this.userLikedAnswer = true;\n      this.likesCounter += 1;\n      let endpoint = `/api/answers/${this.answer.id}/like/`;\n      apiService(endpoint, \"POST\");\n    },\n\n    unLikeAnswer() {\n      this.userLikedAnswer = false;\n      this.likesCounter -= 1;\n      let endpoint = `/api/answers/${this.answer.id}/like/`;\n      apiService(endpoint, \"DELETE\");\n    },\n\n    triggerDeleteAnswer() {\n      // emit an event to delete an answer instance\n      this.$emit(\"delete-answer\", this.answer);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoCA;AACA;EACAA,uBADA;EAEAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA;EALA,CAFA;;EAYAE;IACA;MACAC,2CADA;MAEAC;IAFA;EAIA,CAjBA;;EAkBAC;IACAC;MACA;MACA;IACA;;EAJA,CAlBA;EAwBAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;MACA;MACA;MACAC;IACA,CATA;;IAUAC;MACA;MACA;MACA;MACAD;IACA,CAfA;;IAgBAE;MACA;MACA;IACA;;EAnBA;AAxBA","names":["name","props","answer","type","required","requestUser","data","userLikedAnswer","likesCounter","computed","isAnswerAuthor","methods","toggleLike","likeAnswer","apiService","unLikeAnswer","triggerDeleteAnswer"],"sourceRoot":"src/components","sources":["Answer.vue"],"sourcesContent":["<template>\n  <div class=\"single-answer\">\n    <p class=\"text-muted\">\n      <strong>{{ answer.author }}</strong> &#8901; {{ answer.created_at }}\n    </p>\n    <p>{{ answer.body }}</p>\n    <div v-if=\"isAnswerAuthor\">\n      <router-link\n        :to=\"{ name: 'answer-editor', params: { id: answer.id } }\"\n        class=\"btn btn-sm btn-outline-dark mr-1\"\n        >Edit\n      </router-link>\n      <button\n        class=\"btn btn-sm btn-outline-danger\"\n        @click=\"triggerDeleteAnswer\"\n      >\n        Delete\n      </button>\n    </div>\n    <div v-else>\n      <button\n        class=\"btn btn-sm\"\n        @click=\"toggleLike\"\n        :class=\"{\n          'btn-danger': userLikedAnswer,\n          'btn-outline-danger': !userLikedAnswer,\n        }\"\n      >\n        <strong style=\"background-color:rgb(160, 42, 81);\">Like [{{ likesCounter }}]</strong>\n      </button>\n    </div>\n    <hr />\n  </div>\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nexport default {\n  name: \"AnswerComponent\",\n  props: {\n    answer: {\n      type: Object,\n      required: true,\n    },\n    requestUser: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      userLikedAnswer: this.answer.user_has_voted,\n      likesCounter: this.answer.likes_count,\n    };\n  },\n  computed: {\n    isAnswerAuthor() {\n      // return true if the logged in user is also the author of the answer instance\n      return this.answer.author === this.requestUser;\n    },\n  },\n  methods: {\n    toggleLike() {\n      this.userLikedAnswer === false ? this.likeAnswer() : this.unLikeAnswer();\n    },\n    likeAnswer() {\n      this.userLikedAnswer = true;\n      this.likesCounter += 1;\n      let endpoint = `/api/answers/${this.answer.id}/like/`;\n      apiService(endpoint, \"POST\");\n    },\n    unLikeAnswer() {\n      this.userLikedAnswer = false;\n      this.likesCounter -= 1;\n      let endpoint = `/api/answers/${this.answer.id}/like/`;\n      apiService(endpoint, \"DELETE\");\n    },\n    triggerDeleteAnswer() {\n      // emit an event to delete an answer instance\n      this.$emit(\"delete-answer\", this.answer);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.btn-outline-danger {\n  color: rgb(160, 42, 81);\n  border-color: rgb(160, 42, 81);\n}\n.btn-outline-danger:hover {\n  color: white;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}